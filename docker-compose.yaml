services:
  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - kafka_network
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo > /dev/tcp/kafka/9092" ]
      interval: 10s
      timeout: 5s
      retries: 5


  adapter:
    build:
      context: ./adapter
      dockerfile: Dockerfile
    container_name: adapter
    depends_on:
          kafka:
            condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8000:8000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/docs" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - kafka_network

  service_1:
    build:
      context: ./service_1
      dockerfile: Dockerfile
    container_name: service_1
    depends_on:
          kafka:
            condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8081:8080"
    healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
          interval: 15s
          timeout: 5s
          retries: 3
          start_period: 15s
    networks:
      - kafka_network

  service_2:
    build:
      context: ./service_2
      dockerfile: Dockerfile
    container_name: service_2
    depends_on:
          kafka:
            condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - "8082:8080"
    healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
          interval: 15s
          timeout: 5s
          retries: 3
          start_period: 15s
    networks:
      - kafka_network


networks:
  kafka_network:
    driver: bridge
    name: kafka_network
